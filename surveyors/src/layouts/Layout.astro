---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { ViewTransitions } from 'astro:transitions';
import { getLocationMetaDesc } from '../utils/seo';

interface Props {
	title: string;
	description?: string;
	location?: string;
	canonicalUrl?: string;
}

const { 
	title, 
	description = "Australia's leading engineering surveyors since 2012, delivering expert land surveying, engineering surveys, and construction solutions nationwide. ISO 9001 certified with offices in Melbourne, Perth, Brisbane, and Adelaide.",
	location,
	canonicalUrl = Astro.url.href 
} = Astro.props;

const locationDesc = location ? getLocationMetaDesc(location) : description;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<meta name="google-site-verification" content="rxo16IC5CJeZljzTlKDqilhIMz6H0RCxZ5VNho19CuY" />
		<link rel="icon" href="/favicon.ico" />
		<meta name="generator" content={Astro.generator} />
		<link rel="canonical" href={canonicalUrl} />
		<title>{title}</title>
		<meta name="description" content={locationDesc} />
		
		<!-- Schema.org markup for multiple locations -->
		<script type="application/ld+json" is:inline>
			{
				"@context": "https://schema.org",
				"@type": "Organization",
				"name": "HR Surveyors",
				"url": "https://www.hrsurveyors.com.au",
				"logo": "https://www.hrsurveyors.com.au/images/hr-surveyors-logo-light.png",
				"areaServed": ["VIC", "WA", "QLD", "SA", "NSW"],
				"contactPoint": {
					"@type": "ContactPoint",
					"telephone": "+61-3-xxxx-xxxx",
					"contactType": "customer service"
				}
			}
		</script>

		<link rel="preload" as="image" href="/images/hr-surveyors-logo-light.webp" type="image/webp" media="(prefers-color-scheme: light)">
		<link rel="preload" as="image" href="/images/hr-surveyors-logo-light.png">
		<style>
			/* Add critical CSS here */
			body {
				font-family: 'Inter', sans-serif;
				margin: 0;
				padding: 0;
			}
			/* Add more critical styles as needed */
		</style>
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
		<ViewTransitions />
		<script is:inline src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js" defer></script>
			<script 
  is:inline 
  defer 
  src="https://cloud.umami.is/script.js" 
  data-website-id="3a134d35-eb01-44c0-88f1-df2eea0175a8">
</script>
	</head>
	<body class="bg-white text-hr-dark overflow-x-hidden w-full">
		<Header />
		<main class="w-full overflow-x-hidden pt-[header-height]">
			<slot />
		</main>
		<Footer />
		<script>
			document.addEventListener('astro:page-load', () => {
				const fadeElems = document.querySelectorAll('.fade-in');
				fadeElems.forEach((elem, index) => {
					if (elem instanceof HTMLElement) {
							elem.style.animationDelay = `${index * 0.1}s`;
					}
				});
			});

			if ('serviceWorker' in navigator) {
				window.addEventListener('load', () => {
					navigator.serviceWorker.register('/service-worker.js').then((registration) => {
						console.log('ServiceWorker registration successful with scope: ', registration.scope);
						
						// Check for service worker updates
						registration.addEventListener('updatefound', () => {
							const newWorker = registration.installing;
							if (newWorker) {
								newWorker.addEventListener('statechange', () => {
									if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {
										// New service worker available, notify user to refresh
										if (confirm('New version available! Refresh to update?')) {
											newWorker.postMessage({ type: 'SKIP_WAITING' });
											window.location.reload();
										}
									}
								});
							}
						});
					}).catch((err) => {
						console.log('ServiceWorker registration failed: ', err);
					});
				});
			}
		</script>
	</body>
</html>

<style is:global>
	@font-face {
		font-family: 'Inter';
		font-style: normal;
		font-weight: 400 700;
		font-display: swap;
		src: url('/fonts/inter-var.woff2') format('woff2-variations');
	}

	html, body {
		overflow-x: hidden;
		width: 100%;
		position: relative;
	}

	body {
		overflow-x: hidden;
		transition: background-color 0.3s ease;
		position: relative;
		width: 100%;
		max-width: 100vw;
	}

	.fade-in {
		opacity: 0;
		transform: translateY(20px);
		animation: fadeInUp 0.6s var(--ease-out-quad) forwards;
	}

	@keyframes fadeInUp {
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}

	.hover-lift {
		transition: transform 0.3s var(--ease-out-quad), box-shadow 0.3s var(--ease-out-quad);
	}

	.hover-lift:hover {
		transform: translateY(-5px);
		box-shadow: 0 5px 15px rgba(0,0,0,0.1);
	}

	.text-gradient {
		background-clip: text;
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-image: linear-gradient(45deg, #BBCF31, #3E3E3F);
	}

	.bg-gradient {
		background-image: linear-gradient(45deg, rgba(187,207,49,0.1), rgba(62,62,63,0.1));
	}

	.bg-hr-light-gray {
		background-color: #f4f4f4;
	}

	.text-hr-dark {
		color: #333333;
	}

	/* Improve readability */
	p, li {
		line-height: 1.6;
	}

	/* Responsive images */
	img {
		max-width: 100%;
		height: auto;
	}

	/* Focus styles for accessibility */
	:focus {
		outline: none;
	}

	/* Add custom focus styles */
	*:focus-visible {
		outline: 2px solid rgba(255, 255, 255, 0.5);
		outline-offset: 2px;
	}

	/* For buttons and interactive elements */
	button:focus-visible,
	a:focus-visible,
	input:focus-visible,
	select:focus-visible,
	textarea:focus-visible {
		box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.5);
	}

	/* Custom scrollbar */
	::-webkit-scrollbar {
		width: 10px;
	}

	::-webkit-scrollbar-track {
		background: #f1f1f1;
	}

	::-webkit-scrollbar-thumb {
		background: #BBCF31;
		border-radius: 5px;
	}

	::-webkit-scrollbar-thumb:hover {
		background: #3E3E3F;
	}

	/* Adjust the header styles */
	#main-header {
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		z-index: 50;
		transition: all 0.3s ease;
	}

	/* Style for the new top bar */
	.bg-hr-light {
		transition: all 0.3s ease;
	}

	/* Add these new styles */
	main {
		padding-top: 2rem; /* Increased padding for mobile */
	}

	h1, h2, h3, h4, h5, h6 {
		margin-bottom: 1rem; /* Increased margin for mobile */
	}

	/* Specific style for the main heading (usually h1) */
	main > h1:first-child,
	main > div:first-child > h1:first-child {
		margin-top: 1rem; /* Increased margin for mobile */
	}

	/* Add more space after the main heading */
	main > h1:first-child + *,
	main > div:first-child > h1:first-child + * {
		margin-top: 1.5rem; /* Increased margin for mobile */
	}

	/* Adjustments for larger screens */
	@media (min-width: 768px) {
		main {
			padding-top: 2rem;
		}

		h1, h2, h3, h4, h5, h6 {
			margin-bottom: 1.5rem;
		}

		main > h1:first-child,
		main > div:first-child > h1:first-child {
			margin-top: 2rem;
		}

		main > h1:first-child + *,
		main > div:first-child > h1:first-child + * {
			margin-top: 2.5rem;
		}
	}
</style>

<script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "ProfessionalService",
  "name": "HR Surveyors",
  "description": "Professional land surveying and engineering survey services across Australia",
  "@id": "https://www.hrsurveyors.com.au",
  "url": "https://www.hrsurveyors.com.au",
  "keywords": "land surveyors, engineering surveys, construction surveys, surveyor perth, land surveys melbourne, engineering surveying",
  "priceRange": "$$",
  "hasMap": "https://www.google.com/maps?cid=YOUR_GOOGLE_BUSINESS_CID"
}
</script>
