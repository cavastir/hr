---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

interface Props {
	title: string;
	description: string;
}

const { title, description } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<meta name="description" content={description} />
	</head>
	<body class="bg-hr-light text-hr-dark">
		<div id="loading-overlay" class="fixed inset-0 bg-hr-dark z-50 flex items-center justify-center">
			<div class="animate-spin rounded-full h-32 w-32 border-t-2 border-b-2 border-hr-accent"></div>
		</div>
		<Header />
		<main>
			<slot />
		</main>
		<Footer />
	</body>
</html>

<script>
	import { inView, animate, stagger } from "framer-motion";

	const animateElement = (element: HTMLElement, delay = 0) => {
		animate(element, 
			{ opacity: [0, 1], y: [20, 0] }, 
			{ duration: 0.5, delay, ease: "easeOut" }
		);
	};

	inView("section, img", ({ target }) => {
		animateElement(target as HTMLElement);
	}, { amount: 0.2 });

	inView("section ul, section ol", ({ target }) => {
		animate(target.children as any,
			{ opacity: [0, 1], x: [-10, 0] } as any,
			{ duration: 0.3, delay: stagger(0.05), ease: "easeOut" }
		);
	}, { amount: 0.2 });

	window.addEventListener('load', () => {
		const loadingOverlay = document.getElementById('loading-overlay');
		if (loadingOverlay) {
			loadingOverlay.style.display = 'none';
		}
	});
</script>
