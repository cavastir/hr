---
const navItems = [
  { name: 'Our Services', href: '/services', hasDropdown: true },
  { name: 'Our Story', href: '/about' },
  { name: 'Our Locations', href: '/locations' },
  { name: 'Careers', href: '/careers' },  // Changed from 'Contact' to 'Careers'
];

const serviceItems = [
  { name: 'Land Surveying', href: '/services' },
  { name: 'Engineering Surveys', href: '/services' },
  { name: 'Construction Surveys', href: '/services' },
  { name: 'Aerial Mapping', href: '/services' },
  { name: 'Hydrographic Surveys', href: '/services' },
  { name: 'GIS Services', href: '/services' },
  { name: 'Renewable Energy', href: '/services' },
  { name: 'Utility Locating', href: '/services' },
];

const sisterCompany = {
  name: 'HR Utilities',
  url: 'https://www.hrutilities.com.au'
};
---

<header id="main-header" class="fixed top-0 left-0 right-0 z-50 transition-all duration-300">
  <!-- Sister company bar -->
  <div class="bg-hr-light text-dark text-sm py-1">
    <div class="container mx-auto px-4 text-center">
      <a href={sisterCompany.url} class="hover:underline" target="_blank" rel="noopener noreferrer">
        Discover our sister company, <b>HR Utilities</b>, specializing in advanced subsurface mapping solutions.
      </a>
    </div>
  </div>

  <!-- Main navigation -->
  <div id="main-nav" class="bg-hr-dark bg-opacity-90 backdrop-blur-md">
    <div class="container mx-auto px-4 py-4 flex justify-between items-center">
      <a href="/" class="flex items-center space-x-2 relative w-48 h-12"> 
        <img 
          src="/images/hr-surveyors-logo-light.png" 
          alt="HR Surveyors Logo" 
          class="w-full h-full object-contain logo"
          width="192" height="48"
          loading="eager"
        />
      </a>
      <nav class="hidden md:flex items-center space-x-6">
        {navItems.map((item) => (
          <a href={item.href} class="text-hr-light hover:text-hr-accent transition-colors relative group" data-nav-link>
            {item.name}
            <span class="absolute left-0 right-0 bottom-0 h-0.5 bg-hr-accent transform scale-x-0 group-hover:scale-x-100 transition-transform origin-left"></span>
          </a>
        ))}
        <a href="/contact" class="bg-hr-accent text-hr-light px-4 py-2 rounded font-semibold hover:bg-opacity-90 transition-colors">
          Get in touch
        </a>
      </nav>
      <button class="md:hidden text-hr-light p-2 focus:outline-none" id="mobile-menu-toggle" aria-label="Toggle mobile menu">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
      </button>
    </div>
  </div>
</header>

<!-- Mobile menu (hidden by default) -->
<div class="fixed inset-0 z-50 transform transition-transform duration-300 translate-x-full" id="mobile-menu" style="background-color: white !important;">
  <div class="flex flex-col h-full w-full" style="background-color: white !important;">
    <div class="p-4 flex justify-between items-center border-b border-gray-200" style="background-color: white !important;">
      <h2 class="text-hr-dark text-xl font-bold">Menu</h2>
      <button class="text-hr-dark" id="close-mobile-menu" aria-label="Close mobile menu">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>
    <div class="overflow-y-auto flex-grow" style="background-color: white !important;">
      <div class="border-b border-gray-200" style="background-color: white !important;">
        <button 
          class="w-full text-left text-hr-dark text-lg font-semibold hover:text-hr-accent transition-colors py-4 px-4 flex justify-between items-center"
          data-dropdown-toggle="Our Services"
          style="background-color: white !important;"
        >
          Our Services
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 transform transition-transform duration-200" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
          </svg>
        </button>
        <div class="hidden" id="dropdown-Our Services" style="background-color: white !important;">
          {serviceItems.map((service) => (
            <a href={service.href} class="block text-hr-dark text-lg hover:text-hr-accent transition-colors py-3 px-8" style="background-color: white !important;">
              {service.name}
            </a>
          ))}
        </div>
      </div>
      <a href="/about" class="block text-hr-dark text-lg font-semibold hover:text-hr-accent transition-colors py-4 px-4 border-b border-gray-200" style="background-color: white !important;">
        Our Story
      </a>
      <a href="/locations" class="block text-hr-dark text-lg font-semibold hover:text-hr-accent transition-colors py-4 px-4 border-b border-gray-200" style="background-color: white !important;">
        Our Locations
      </a>
      <a href="/careers" class="block text-hr-dark text-lg font-semibold hover:text-hr-accent transition-colors py-4 px-4 border-b border-gray-200" style="background-color: white !important;">
        Careers
      </a>
      <a href="/contact" class="block text-hr-dark text-lg font-semibold hover:text-hr-accent transition-colors py-4 px-4 border-b border-gray-200" style="background-color: white !important;">
        Contact
      </a>
      <a href="https://www.hrutilities.com.au" target="_blank" rel="noopener noreferrer" class="block text-hr-accent text-lg font-semibold hover:text-green-700 transition-colors py-4 px-4 border-b border-gray-200" style="background-color: white !important;">
        HR Utilities
      </a>
    </div>
  </div>
</div>

<script>
  document.addEventListener('astro:page-load', () => {
    const header = document.getElementById('main-header');
    const mainNav = document.getElementById('main-nav');
    const navLinks = document.querySelectorAll('[data-nav-link]');
    const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
    const burgerIcon = mobileMenuToggle?.querySelector('svg');
    const mobileMenu = document.getElementById('mobile-menu');
    const closeMobileMenu = document.getElementById('close-mobile-menu');

    const scrollThreshold = 50;

    function updateHeaderStyle() {
      if (!header || !mainNav) return;

      const currentScrollY = window.scrollY;

      if (currentScrollY > scrollThreshold) {
        mainNav.classList.remove('bg-opacity-20', 'backdrop-blur-md', 'bg-hr-dark');
        mainNav.classList.add('bg-white');
        
        navLinks.forEach(link => {
          if (link instanceof HTMLElement) {
            link.classList.remove('text-hr-light');
            link.classList.add('text-hr-dark');
          }
        });
        if (burgerIcon) {
          burgerIcon.classList.remove('text-hr-light');
          burgerIcon.classList.add('text-hr-dark');
        }
      } else {
        mainNav.classList.remove('bg-white');
        mainNav.classList.add('bg-hr-dark', 'bg-opacity-90', 'backdrop-blur-md');
        
        navLinks.forEach(link => {
          if (link instanceof HTMLElement) {
            link.classList.add('text-hr-light');
            link.classList.remove('text-hr-dark');
          }
        });
        if (burgerIcon) {
          burgerIcon.classList.add('text-hr-light');
          burgerIcon.classList.remove('text-hr-dark');
        }
      }
    }

    // Call the function on initial load
    updateHeaderStyle();

    // Add event listener for scroll
    window.addEventListener('scroll', updateHeaderStyle);

    // Mobile menu toggle functionality
    if (mobileMenuToggle && mobileMenu && closeMobileMenu) {
      mobileMenuToggle.addEventListener('click', () => {
        mobileMenu.classList.toggle('translate-x-full');
      });

      closeMobileMenu.addEventListener('click', () => {
        mobileMenu.classList.add('translate-x-full');
      });
    }

    // Dropdown functionality for mobile menu
    const dropdownToggles = document.querySelectorAll('[data-dropdown-toggle]');
    dropdownToggles.forEach(toggle => {
      toggle.addEventListener('click', (e) => {
        const target = e.currentTarget as HTMLElement;
        const targetId = target.getAttribute('data-dropdown-toggle');
        if (targetId) {
          const targetDropdown = document.getElementById(`dropdown-${targetId}`);
          if (targetDropdown) {
            targetDropdown.classList.toggle('hidden');
            const svg = target.querySelector('svg');
            if (svg) {
              svg.classList.toggle('rotate-180');
            }
          }
        }
      });
    });

    // Clean up the event listeners when the component is unmounted
    return () => {
      window.removeEventListener('scroll', updateHeaderStyle);
      if (mobileMenuToggle) {
        mobileMenuToggle.removeEventListener('click', () => {});
      }
      if (closeMobileMenu) {
        closeMobileMenu.removeEventListener('click', () => {});
      }
      dropdownToggles.forEach(toggle => {
        toggle.removeEventListener('click', () => {});
      });
    };
  });
</script>
